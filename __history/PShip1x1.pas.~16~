unit PShip1x1;

interface
uses
   Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Math;


     type
      MField = Array  of Array of byte;
    TShip1 = class
    private
    function RandomOnCentre(a,b:integer; DField: MField):boolean;

    public
     Ship1Image: TImage;
     x,y:integer;
     Live:byte;
     constructor CreatBOT( NewN:integer; var DField:MField);

    end;


implementation



constructor TShip1.CreatBOT(NewN: integer; var DField: MField);
var i,x1,y1,Z:integer;  J:byte;
begin

     j:=1;
      while j<>0 do
          begin
    x1:=RandomRange(1,NewN+1);
    y1:=RandomRange(1,NewN+1);
            if RandomOnCentre(x1,y1,DField)=true then
        begin
             DField[x1,y1]:=1;
             Live:=1;
            x:=x1;
            y:=y1;
            j:=0;
          end;
end;

{ TShip1 }

end;




function TShip1.RandomOnCentre(a, b: integer; DField: MField): boolean;
begin
   if  (DField[a,b]=0)   then
       if (DField[a+1,b]<>1)    then
          if (DField[a-1,b]<>1)    then
               if (DField[a,b+1]<>1)  then
                    if (DField[a,b-1]<>1)  then
                       if (DField[a+1,b+1]<>1)  then
                         if (DField[a+1,b-1]<>1)  then
                            if (DField[a-1,b+1]<>1) then
                               if (DField[a-1,b-1]<>1)  then
                                     Result:=true
                                     else
                                        Result:=False
end;




end.




